// Generated by view binder compiler. Do not edit!
package cifor.icraf.objects.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import cifor.icraf.objects.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ObjectItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView objectId;

  @NonNull
  public final TextView objectIdValue;

  @NonNull
  public final TextView objectName;

  @NonNull
  public final TextView objectNameValue;

  @NonNull
  public final Button submitObjectButton;

  private ObjectItemBinding(@NonNull CardView rootView, @NonNull TextView objectId,
      @NonNull TextView objectIdValue, @NonNull TextView objectName,
      @NonNull TextView objectNameValue, @NonNull Button submitObjectButton) {
    this.rootView = rootView;
    this.objectId = objectId;
    this.objectIdValue = objectIdValue;
    this.objectName = objectName;
    this.objectNameValue = objectNameValue;
    this.submitObjectButton = submitObjectButton;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ObjectItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ObjectItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.object_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ObjectItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.objectId;
      TextView objectId = ViewBindings.findChildViewById(rootView, id);
      if (objectId == null) {
        break missingId;
      }

      id = R.id.objectIdValue;
      TextView objectIdValue = ViewBindings.findChildViewById(rootView, id);
      if (objectIdValue == null) {
        break missingId;
      }

      id = R.id.objectName;
      TextView objectName = ViewBindings.findChildViewById(rootView, id);
      if (objectName == null) {
        break missingId;
      }

      id = R.id.objectNameValue;
      TextView objectNameValue = ViewBindings.findChildViewById(rootView, id);
      if (objectNameValue == null) {
        break missingId;
      }

      id = R.id.submitObjectButton;
      Button submitObjectButton = ViewBindings.findChildViewById(rootView, id);
      if (submitObjectButton == null) {
        break missingId;
      }

      return new ObjectItemBinding((CardView) rootView, objectId, objectIdValue, objectName,
          objectNameValue, submitObjectButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
